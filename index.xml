<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oba</title>
    <link>/</link>
    <description>Recent content on Oba</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Kendal Harland</copyright>
    <lastBuildDate>Fri, 23 Oct 2020 08:43:37 -0400</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>/guides/language/overview/</link>
      <pubDate>Fri, 23 Oct 2020 08:43:37 -0400</pubDate>
      
      <guid>/guides/language/overview/</guid>
      <description>A lightweight, fast, embeddable, functional scripting language.  Oba sports a dynamic, but strong type system and a terse syntax which borrows designs from Haskell, Rust, and Go.
import &amp;#34;system&amp;#34; fn fib n = match n | 0 = 0 | 1 = 1 | n = fib(n-1) + fib(n-2) ; system::print(fib(13))   Oba is small. The implementation can be skimmed an in afternoon.
  Oba is functional. Oba aims to make functional programming more accessible by providing a simple, terse syntax which should feel accessible to programmers coming from imperative languages.</description>
    </item>
    
    <item>
      <title>CLI</title>
      <link>/guides/reference/cli/</link>
      <pubDate>Thu, 22 Oct 2020 09:56:48 -0400</pubDate>
      
      <guid>/guides/reference/cli/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Embedding</title>
      <link>/guides/reference/embedding/</link>
      <pubDate>Thu, 22 Oct 2020 09:16:11 -0400</pubDate>
      
      <guid>/guides/reference/embedding/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>/guides/language/variables/</link>
      <pubDate>Thu, 22 Oct 2020 09:12:08 -0400</pubDate>
      
      <guid>/guides/language/variables/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Control Flow</title>
      <link>/guides/language/control_flow/</link>
      <pubDate>Thu, 22 Oct 2020 09:12:01 -0400</pubDate>
      
      <guid>/guides/language/control_flow/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Values</title>
      <link>/guides/language/values/</link>
      <pubDate>Thu, 22 Oct 2020 09:11:50 -0400</pubDate>
      
      <guid>/guides/language/values/</guid>
      <description>Values are built-in object types. They can be created through literals, which are expressions that evaluate to a value. Values are immutable by default.
Booleans There are two boolean literals, true and false.
true false Numbers Oba uses double-precision floating point for all numeric values
0 1234 -1234 3.14159 Functions Functions are first class values in Oba. They can be stored in variables and passed as arguments to other functions.</description>
    </item>
    
    <item>
      <title>Functions</title>
      <link>/guides/language/functions/</link>
      <pubDate>Thu, 22 Oct 2020 09:11:47 -0400</pubDate>
      
      <guid>/guides/language/functions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Modules</title>
      <link>/guides/language/modules/</link>
      <pubDate>Thu, 22 Oct 2020 09:11:40 -0400</pubDate>
      
      <guid>/guides/language/modules/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Syntax</title>
      <link>/guides/language/syntax/</link>
      <pubDate>Thu, 22 Oct 2020 09:11:26 -0400</pubDate>
      
      <guid>/guides/language/syntax/</guid>
      <description>Comments Oba has line comments, only, which start with // and end on a newline:
// This is a comment Reserved words debug false let true if else while match fn import Identifiers Identifiers start with an underscore or letter and contain letters, digits, and underscores. Examples:
_i camelCase PascalCase _snake_case alph4num3r1c ALL_CAPS Newlines Oba does not have semicolons, except for in special cases. Instead, newlines (\n) are used to terminate statements:</description>
    </item>
    
  </channel>
</rss>
